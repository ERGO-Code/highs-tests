name: hipo-ubuntu-gh

# on: []
on: [push, pull_request]

jobs:
  hipo:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        branch: [hipo-tt]
        config: [Release, Debug]
        all_tests: [ON, OFF]

    steps:
      - uses: actions/checkout@v4

      - name: Checkout HiGHS
        uses: actions/checkout@v4
        with:
          repository: ERGO-Code/HiGHS
          ref: ${{matrix.branch}}
          path: HiGHS

      - name: Checkout GKlib
        uses: actions/checkout@v4
        with:
          repository: KarypisLab/GKlib
          ref: master
          path: GKlib

      - name: Checkout METIS
        uses: actions/checkout@v4
        with:
          repository: KarypisLab/METIS
          ref: master
          path: METIS

      - name: Create installs dir
        working-directory: ${{runner.workspace}}
        run: |
          mkdir installs
          ls

      - name: Install GKlib Release
        if: ${{ matrix.config == 'Release' }}
        run: |
          cd GKlib
          make config shared=1 prefix=${{runner.workspace}}/installs
          make
          make install

      - name: Install GKlib Debug
        if: ${{ matrix.config == 'Debug' }}
        run: |
          cd GKlib
          make config shared=1 prefix=${{runner.workspace}}/installs gdb=1 debug=1
          make
          make install

      # - name: Check installs
      #   working-directory: ${{runner.workspace}}
      #   run: |
      #     cd installs
      #     ls
      #     ls lib

      - name: Copy GKlib shared (bug)
        working-directory: ${{runner.workspace}}
        run: |
          cd installs
          cd lib
          ln libGKlib.so.0 libGKlib.so
          ls

      - name: Install METIS Release
        if: ${{ matrix.config == 'Release'}}
        run: |
          cd METIS
          make config shared=1 prefix=${{runner.workspace}}/installs
          make
          make install

      - name: Install METIS Debug
        if: ${{ matrix.config == 'Debug'}}
        run: |
          cd METIS
          make config shared=1 prefix=${{runner.workspace}}/installs gdb=1 debug=1
          make
          make install

      # no default blas available on runner

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-libopenblas

      - name: Install OpenBLAS
        shell: bash
        run: |
          sudo apt update
          sudo apt install libopenblas-dev

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        run: |
          cmake \
          -S ${{runner.workspace}}/highs-tests/HiGHS \
          -B ${{runner.workspace}}/build \
          -DHIPO=ON \
          -DMETIS_ROOT=${{runner.workspace}}/installs \
          -DGKLIB_ROOT=${{runner.workspace}}/installs \
          -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
          -DALL_TESTS=${{ matrix.all_tests}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake --build . --parallel

      - name: Test executable
        working-directory: ${{runner.workspace}}/build
        run: |
          ./bin/highs --solver=hipo \
          ${{runner.workspace}}/highs-tests/HiGHS/check/instances/afiro.mps

      - name: Ctest
        working-directory: ${{runner.workspace}}/build
        run: |
          ctest --parallel --timeout 300 --output-on-failure
